import type { GetStaticProps, NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import {
  Text,
  useColorModeValue as mode,
  Box,
  Heading,
  SimpleGrid,
} from "@chakra-ui/react";
import { gql } from "@apollo/client";

import client from "../lib/apollo-client";
import { Layout } from "../src/components/blocks/layout";
import { HeroHome } from "../src/components/section/hero-home";
import { FeaturedTwo } from "../src/components/section/featured-2";
import { TestimonialCurve } from "../src/components/section/TestimonialWithCurve";
import { CtaActionsTwo } from "../src/components/section/CtaWithTwoActions";
import { LogoBox } from "../src/components/section/WithBoxedLogo";


// type Post = {
//   title: string;
//   content: string;
//   featuredImage: string;
// };
interface HomeInt {
  data: GetStaticProps | any;
}

const Home: NextPage<HomeInt> = ({ data }) => {
  const allPosts = data.posts;
  return (
    <>
      <Head>
        <title>Headless CMS &amp; Wordpress Development Services</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <HeroHome />
        <FeaturedTwo />
        <TestimonialCurve />
        <LogoBox />
        <Box bg={mode("gray.50", "inherit")} as="section" py="24">
          <Box
            maxW={{ base: "xl", md: "2xl", lg: "7xl" }}
            mx="auto"
            px={{ base: "6", md: "8" }}
          >
            <Box textAlign="center" maxW="md" mx="auto">
              <Heading size="2xl" fontWeight="extrabold" letterSpacing="tight">
                From the blog
              </Heading>
              <Text mt="4" fontSize="lg" color={mode("gray.600", "gray.400")}>
                Lorem ipsum dolor sit amet consectetur, adipisicing elit. Ipsa
                libero labore natus atque, ducimus sed.
              </Text>
            </Box>
            <SimpleGrid mt="14" columns={{ base: 1, lg: 3 }} spacing="14">
              {allPosts.nodes.map((a: any, index: number) => {
                return (
                  <Box
                    maxW="sm"
                    borderWidth="1px"
                    borderRadius="lg"
                    overflow="hidden"
                    key={index.toString()}
                  >
                    <Image
                      src={a.featuredImage.node.sourceUrl}
                      alt={a.featuredImage.node.altText}
                      layout="responsive"
                      width="368px"
                      height="192px"
                    />
                    <Box mb="6">
                      <Box as="a" href={a.link}>
                        <Heading size="md" mt="6" mb="4" pl="5" pr="5">
                          {a.title}
                        </Heading>
                      </Box>
                    </Box>
                  </Box>
                );
              })}
            </SimpleGrid>
          </Box>
        </Box>

        <CtaActionsTwo />
      </Layout>
    </>
  );
};

export default Home;
export async function getStaticProps() {
  const { data } = await client.query({
    query: gql`
      query BlogQuery {
        posts(first: 3) {
          nodes {
            id
            title
            content
            link
            featuredImage {
              node {
                altText
                sourceUrl
              }
            }
            terms {
              nodes {
                name
                link
                id
              }
            }
          }
        }
      }
    `,
  });

  return {
    props: {
      data,
    },
  };
}
